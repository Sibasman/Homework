№хот фикс 16.10.25
import math

def binary(list_value, target_value, l_value = 0, r_value = None):
    if r_value is None:
        r_value = len(list_value)-1
    
    if l_value > r_value:
        return -1
    
    center_value = (l_value + r_value) // 2
    
    if list_value[center_value] == target_value:
        return center_value
    
    if target_value < list_value[center_value]:
        return binary(list_value, target_value, l_value, center_value -1)
    return binary(list_value, target_value, center_value +1, r_value)

def ten_sistem_two_sistem(ten_value):
    
    two_value = []
    
    if ten_value < 0:
        raise ValueError("Ошибка, данная функция не работает с отрицательным значениями")
    if ten_value == 0:
        return "0"
    while ten_value > 0:
        two_value.append(str(ten_value % 2))
        ten_value //= 2
    two_value.reverse()
    return "".join(two_value)

def just_char(char):
    
    if char <= 1:
        return False
    if char <= 3:
        
        return True
    if char % 2 == 0:
        
        return False

    limit = math.isqrt(char)
    for divisor in range(3, limit + 1, 2):
        if char % divisor == 0:
            return False
    return True
    
def nod(a, b):
    a, b = abs(a), abs(b)
    while b:
        a, b = b, a % b
    return a
    
try:
    
    numbers_list = 10
    
    print(f"Доступное количество решений: {numbers_list}")
    number = int(input("Выберите нужное решение: "))
    
    if number == 1:
        
        #Дан список чисел, отсортированных по возрастанию.
        #На вход принимается значение, равное одному из элементов
        #списка. Реализовать функцию, выполняющую рекурсивный
        #алгоритм бинарного поиска, на выходе программа должна
        #вывести позицию искомого элемента в исходном списке.
        
        list = [1, 24, 45, 23, 10, 3, 8, 7, 9, 10]
        list_sort = sorted(list)
        print(f"Ваш список состоит из нескольких чисел: {list_sort}")
        target = int(input("Введите какое число хотите найти в списке: "))

        print(f"Нужное значение нахоидться на: {binary(list_sort, target)} месте")
        
    elif number == 2:
        
        #Программа получает на вход число в десятичной
        #системе счисления. Реализовать функцию, которая
        #переводит входное число в двоичную систему счисления.
        #Допускается реализация функции как в рекурсивном
        #варианте, так и с итеративным подходом.
        
        print("Введите десетеричное значение")
        two = int(input("Введите: "))
        
        print(ten_sistem_two_sistem(two))
        
    elif number == 3:
        
        #Программа получает на вход число. Реализовать
        #функцию, которая определяет, является ли это число простым
        #(делится только на единицу и на само себя).
        
        input_char = int(input("Введите число: "))
    
        if just_char(input_char):
            print("Простое число")
        else:
            print("Не простое число")
            
    elif number == 4:
        
        #Программа получает на вход два числа и находит их
        #НОД (наибольший общий делитель). Пример: на вход
        #подаются числа 12 и 18, их НОД равен 6
        
        input_a = int(input("Введите значения a: "))
        input_b = int(input("Введите значения b: "))
        
        print(nod(input_a, input_b))
    else:
        
        print("Некоректно")
        
except ValueError:
    print("Некоректно задано значение")
    
